import java.util.Arrays;

public class MergeSort {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String[] a = new String[] { "emu", "dog", "ant", "cow", "fox", "bug" };
		sort(a);
		System.out.println(Arrays.toString(a));
		if (isSorted(a)) {
			System.out.println("Sorted!");
		} else {
			System.out.println("There's a problem. Not sorted!");
		}
	}
	
	
	public static boolean isSorted(Comparable[] a) {
		for (int i = 1; i < a.length; i++) {
			if (a[i].compareTo(a[i - 1]) < 0) {
				return false;
			}
		}
		return true;
	}
	
	public static void sort(Comparable []a) {
		Comparable aux [] = new Comparable[a.length];
		
		sort(a, aux, 0, a.length-1);
		
	}
	
	private static void sort(Comparable []a, Comparable [] aux, int low, int high) {
		if(low>=high) {
			return;
		}
		
		int mid = low + (high-low)/2;
		
		sort(a, aux, low, mid);
		sort(a, aux, mid+1, high);
		mergeSort(a, aux, low, mid, high);
		
		
	}
	
	public static void mergeSort(Comparable [] a, Comparable [] aux, int low, int mid, int high ) {
		for(int i = low; i<= high; i++) {
			aux[i] = a[i]; // copy
		}
		
		int i = low;
		int j = mid+1;
		
		for(int k = low; k<=high; k++ ) {
		if(i>mid) {
			a[k] = aux[j++];
			
			//j++;
		}
		
		else if(j>high) {
			a[k] = aux[i++];
			//i++;
		}
		
		else if(less(aux[j],aux[i])) {
			a[k] = aux[j++];
			
		} else {
			a[k] = aux[i++];
			//i++;
		}
		
		}
	}

	
	
	public static boolean less(Comparable v, Comparable w) {
		return v.compareTo(w) < 0;
	}
	
}
